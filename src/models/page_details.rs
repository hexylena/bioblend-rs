/*
 * Galaxy API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 22.05.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PageDetails {
    /// Raw text contents of the first page revision (type dependent on content_format).
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// Either `markdown` or `html`.
    #[serde(rename = "content_format", skip_serializing_if = "Option::is_none")]
    pub content_format: Option<Box<crate::models::PageContentFormat>>,
    /// Whether this Page has been deleted.
    #[serde(rename = "deleted")]
    pub deleted: bool,
    /// The date this page was generated.
    #[serde(rename = "generate_time", skip_serializing_if = "Option::is_none")]
    pub generate_time: Option<String>,
    /// The version of Galaxy this page was generated with.
    #[serde(rename = "generate_version", skip_serializing_if = "Option::is_none")]
    pub generate_version: Option<String>,
    /// Encoded ID of the Page.
    #[serde(rename = "id")]
    pub id: String,
    /// Whether this Page can be imported.
    #[serde(rename = "importable")]
    pub importable: bool,
    /// The encoded ID of the last revision of this Page.
    #[serde(rename = "latest_revision_id")]
    pub latest_revision_id: String,
    /// The class of the model associated with the ID.
    #[serde(rename = "model_class")]
    pub model_class: String,
    /// Whether this Page has been published.
    #[serde(rename = "published")]
    pub published: bool,
    /// The history with the encoded ID of each revision of the Page.
    #[serde(rename = "revision_ids")]
    pub revision_ids: Vec<String>,
    /// The title slug for the page URL, must be unique.
    #[serde(rename = "slug")]
    pub slug: String,
    /// The name of the page
    #[serde(rename = "title")]
    pub title: String,
    /// The name of the user owning this Page.
    #[serde(rename = "username")]
    pub username: String,
}

impl PageDetails {
    pub fn new(deleted: bool, id: String, importable: bool, latest_revision_id: String, model_class: String, published: bool, revision_ids: Vec<String>, slug: String, title: String, username: String) -> PageDetails {
        PageDetails {
            content: None,
            content_format: None,
            deleted,
            generate_time: None,
            generate_version: None,
            id,
            importable,
            latest_revision_id,
            model_class,
            published,
            revision_ids,
            slug,
            title,
            username,
        }
    }
}


