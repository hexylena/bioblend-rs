/*
 * Galaxy API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 22.05.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreatePagePayload {
    /// Annotation that will be attached to the page.
    #[serde(rename = "annotation", skip_serializing_if = "Option::is_none")]
    pub annotation: Option<String>,
    /// Raw text contents of the first page revision (type dependent on content_format).
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// Either `markdown` or `html`.
    #[serde(rename = "content_format", skip_serializing_if = "Option::is_none")]
    pub content_format: Option<Box<crate::models::PageContentFormat>>,
    /// Encoded ID used by workflow generated reports.
    #[serde(rename = "invocation_id", skip_serializing_if = "Option::is_none")]
    pub invocation_id: Option<String>,
    /// The title slug for the page URL, must be unique.
    #[serde(rename = "slug")]
    pub slug: String,
    /// The name of the page
    #[serde(rename = "title")]
    pub title: String,
}

impl CreatePagePayload {
    pub fn new(slug: String, title: String) -> CreatePagePayload {
        CreatePagePayload {
            annotation: None,
            content: None,
            content_format: None,
            invocation_id: None,
            slug,
            title,
        }
    }
}


