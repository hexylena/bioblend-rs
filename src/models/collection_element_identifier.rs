/*
 * Galaxy API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 22.05.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CollectionElementIdentifier : Base model definition with common configuration used by all derived models.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CollectionElementIdentifier {
    /// The type of the collection, can be `list`, `paired`, or define subcollections using `:` as separator like `list:paired` or `list:list`.
    #[serde(rename = "collection_type", skip_serializing_if = "Option::is_none")]
    pub collection_type: Option<String>,
    /// List of elements that should be in the new sub-collection.
    #[serde(rename = "element_identifiers", skip_serializing_if = "Option::is_none")]
    pub element_identifiers: Option<Vec<crate::models::CollectionElementIdentifier>>,
    /// The encoded ID of the element.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The name of the element.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The source of the element.
    #[serde(rename = "src")]
    pub src: Box<crate::models::ColletionSourceType>,
    /// The list of tags associated with the element.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
}

impl CollectionElementIdentifier {
    /// Base model definition with common configuration used by all derived models.
    pub fn new(src: crate::models::ColletionSourceType) -> CollectionElementIdentifier {
        CollectionElementIdentifier {
            collection_type: None,
            element_identifiers: None,
            id: None,
            name: None,
            src: Box::new(src),
            tags: None,
        }
    }
}


