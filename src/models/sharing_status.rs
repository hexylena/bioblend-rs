/*
 * Galaxy API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 22.05.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SharingStatus {
    /// The encoded ID of the resource to be shared.
    #[serde(rename = "id")]
    pub id: String,
    /// Whether this resource can be published using a link.
    #[serde(rename = "importable")]
    pub importable: bool,
    /// Whether this resource is currently published.
    #[serde(rename = "published")]
    pub published: bool,
    /// The title or name of the resource.
    #[serde(rename = "title")]
    pub title: String,
    /// The relative URL in the form of /u/{username}/{resource_single_char}/{slug}
    #[serde(rename = "username_and_slug", skip_serializing_if = "Option::is_none")]
    pub username_and_slug: Option<String>,
    /// The list of encoded ids for users the resource has been shared.
    #[serde(rename = "users_shared_with", skip_serializing_if = "Option::is_none")]
    pub users_shared_with: Option<Vec<crate::models::UserEmail>>,
}

impl SharingStatus {
    pub fn new(id: String, importable: bool, published: bool, title: String) -> SharingStatus {
        SharingStatus {
            id,
            importable,
            published,
            title,
            username_and_slug: None,
            users_shared_with: None,
        }
    }
}


